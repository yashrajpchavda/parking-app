{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///../node_modules/graphql/jsutils/devAssert.mjs","webpack:///../node_modules/graphql/jsutils/defineToJSON.mjs","webpack:///../node_modules/graphql/jsutils/isObjectLike.mjs","webpack:///../node_modules/graphql/language/location.mjs","webpack:///../node_modules/graphql/language/printLocation.mjs","webpack:///../node_modules/graphql/error/GraphQLError.mjs","webpack:///../node_modules/graphql/error/syntaxError.mjs","webpack:///../node_modules/graphql/language/lexer.mjs","webpack:///../node_modules/graphql/language/parser.mjs","webpack:///../node_modules/graphql/language/kinds.mjs","webpack:///../node_modules/graphql/jsutils/defineToStringTag.mjs","webpack:///../node_modules/graphql/language/source.mjs","webpack:///../node_modules/graphql/language/tokenKind.mjs","webpack:///../node_modules/graphql/language/directiveLocation.mjs","webpack:///./routes/home/style.css","webpack:///../node_modules/@apollo/react-hooks/lib/react-hooks.esm.js","webpack:///../node_modules/graphql-tag/src/index.js"],"names":["SAY_HI","gql","Home","useQuery","loading","data","console","log","class","style","home","sayHi","devAssert","condition","message","Boolean","Error","defineToJSON","classObject","fn","arguments","length","undefined","prototype","toString","toJSON","inspect","nodejsCustomInspectSymbol","_typeof","obj","Symbol","iterator","constructor","getLocation","source","position","match","lineRegexp","line","column","exec","body","index","printLocation","location","printSourceLocation","start","sourceLocation","firstLineColumnOffset","locationOffset","whitespace","lineIndex","lineNum","columnNum","locationStr","concat","name","lines","split","locationLine","sublineIndex","Math","floor","sublineColumnNum","sublines","i","push","slice","printPrefixedLines","map","subline","existingLines","filter","_ref","padLen","max","apply","_ref2","_ref3","str","join","len","Array","GraphQLError","nodes","positions","path","originalError","extensions","_nodes","isArray","_source","node","loc","_locations","_positions","reduce","list","pos","value","_extensions","originalExtensions","Object","defineProperties","this","enumerable","writable","locations","stack","defineProperty","configurable","captureStackTrace","syntaxError","description","advanceLexer","lastToken","token","lookahead","kind","TokenKind","EOF","next","readToken","COMMENT","Tok","end","prev","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toUpperCase","lexer","bodyLength","startPosition","charCodeAt","lineStart","positionAfterWhitespace","col","BANG","readComment","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","readName","firstCode","isFloat","readDigits","FLOAT","INT","readNumber","chunkStart","rawValue","BLOCK_STRING","dedentBlockStringValue","readBlockString","STRING","charCode","a","b","c","d","char2hex","invalidSequence","readString","unexpectedCharacterMessage","parse","options","Parser","parseDocument","parseValue","parser","expectToken","SOF","parseValueLiteral","parseType","type","parseTypeReference","Loc","startToken","endToken","getTokenDesc","create","error","output","_i2","_error$nodes2","_i4","_error$locations2","printError","Kind","freeze","DOCUMENT","OPERATION_DEFINITION","VARIABLE_DEFINITION","SELECTION_SET","FIELD","ARGUMENT","FRAGMENT_SPREAD","INLINE_FRAGMENT","FRAGMENT_DEFINITION","VARIABLE","BOOLEAN","NULL","ENUM","LIST","OBJECT","OBJECT_FIELD","DIRECTIVE","NAMED_TYPE","LIST_TYPE","NON_NULL_TYPE","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","OBJECT_TYPE_DEFINITION","FIELD_DEFINITION","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","UNION_TYPE_DEFINITION","ENUM_TYPE_DEFINITION","ENUM_VALUE_DEFINITION","INPUT_OBJECT_TYPE_DEFINITION","DIRECTIVE_DEFINITION","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","Source","toStringTag","get","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","SCHEMA","SCALAR","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","sourceObj","_lexer","startOfFileToken","advance","createLexer","_options","_proto","parseName","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","defaultValue","expectOptionalToken","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","block","_this","values","any","_this2","fields","parseObjectField","parseDirective","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","interfaces","parseImplementsInterfaces","parseFieldsDefinition","types","allowLegacySDLImplementsInterfaces","allowLegacySDLEmptyFields","parseFieldDefinition","args","parseArgumentDefs","parseInputValueDef","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","repeatable","parseDirectiveLocations","parseDirectiveLocation","noLocation","atToken","openKind","parseFn","closeKind","call","module","exports","useBaseQuery","query","lazy","context","useContext","getApolloContext","_a","useReducer","x","tick","forceUpdate","updatedOptions","__assign","queryDataRef","useRef","current","QueryData","queryData","setOptions","memoFn","key","ref","memo","onError","onCompleted","result","executeLazy","execute","equal","queryResult","useEffect","afterExecute","networkStatus","cleanup","OperationData","isMounted","previousOptions","getOptions","newOptions","storePrevious","unmount","refreshClient","client","invariant","isNew","verifyDocumentType","document","operationName","_super","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getExecuteResult","getQueryResult","startQuerySubscription","obsRefetch","variables","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","__extends","skip","removeQuerySubscription","updateObservableQuery","getExecuteSsrResult","NetworkStatus","ready","called","fetchData","ssr","obs","getCurrentResult","_b","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","bind","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","DocumentType","Query","displayName","fetchPolicy","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","catch","subscription","subscribe","previousResult","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","getLastResult","resetLastResults","observableQueryFields","currentResult","partial","errors","ApolloError","graphQLErrors","partialRefetch","obsQuery","unsubscribe","MutationData","setResult","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","onMutationError","mutation","Mutation","mostRecentMutationId","optimisticResponse","update","mutationContext","_c","awaitRefetchQueries","mutateOptions","mutateVariables","refetchQueries","ignoreResults","updateResult","isMostRecentMutation","SubscriptionData","initialize","getLoadingResult","shouldResubscribe","keys","startSubscription","endSubscription","updateCurrentData","updateError","complete","completeSubscription","onSubscriptionData","subscriptionData","onSubscriptionComplete","RenderPromises","queryPromises","Map","queryInfoTrie","observable","props","lookupQueryInfo","queryInstance","finish","seen","set","Promise","resolve","hasPromises","size","consumeAndAwaitPromises","promises","forEach","promise","clear","all","varMap","has","variablesString","info","normalize","string","replace","trim","doc","cacheKey","docCache","parsed","stripLoc","removeLocAtThisLevel","docType","valueType","ast","astFragmentMap","fragmentDefinition","fragmentName","sourceKey","substring","fragmentSourceMap","printFragmentWarnings","warn","processFragments","literals","require","default","resetCaches","disableFragmentWarnings","enableExperimentalFragmentVariables","disableExperimentalFragmentVariables"],"mappings":"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","file":"route-home.chunk.7c158.js","sourcesContent":["import { createElement } from 'preact';\nimport style from './style';\nimport gql from 'graphql-tag';\n\nimport { useQuery } from '@apollo/react-hooks';\n\nconst SAY_HI = gql`\n\t{\n\t\tsayHi\n\t}\n`;\n\nconst Home = () => {\n\tconst { loading, data } = useQuery(SAY_HI);\n\n\tif(data) {\n\t\tconsole.log('data is', data);\n\t}\n\treturn (\n\t\tloading ? \n\t\t\t<h1>Loading...</h1> :\n\t\t\t(<div class={style.home}>\n\t\t\t\t<h1>{data.sayHi}</h1>\n\t\t\t\t<p>This is the Home component.</p>\n\t\t\t</div>)\n\t\t\n\t)\n};\n\nexport default Home;\n","export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","import nodejsCustomInspectSymbol from './nodejsCustomInspectSymbol';\n/**\n * The `defineToJSON()` function defines toJSON() and inspect() prototype\n * methods, if no function provided they become aliases for toString().\n */\n\nexport default function defineToJSON(classObject) {\n  var fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : classObject.prototype.toString;\n  classObject.prototype.toJSON = fn;\n  classObject.prototype.inspect = fn;\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n","/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n","import { getLocation } from '../language/location';\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var sublineIndex = Math.floor(columnNum / 80);\n    var sublineColumnNum = columnNum % 80;\n    var sublines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      sublines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), sublines[0]]].concat(sublines.slice(1, sublineIndex + 1).map(function (subline) {\n      return ['', subline];\n    }), [[' ', whitespace(sublineColumnNum - 1) + '^'], ['', sublines[sublineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return lpad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction lpad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n","import isObjectLike from '../jsutils/isObjectLike';\nimport { getLocation } from '../language/location';\nimport { printLocation, printSourceLocation } from '../language/printLocation';\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport function GraphQLError( // eslint-disable-line no-redeclare\nmessage, nodes, source, positions, path, originalError, extensions) {\n  // Compute list of blame nodes.\n  var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n  var _source = source;\n\n  if (!_source && _nodes) {\n    var node = _nodes[0];\n    _source = node && node.loc && node.loc.source;\n  }\n\n  var _positions = positions;\n\n  if (!_positions && _nodes) {\n    _positions = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(node.loc.start);\n      }\n\n      return list;\n    }, []);\n  }\n\n  if (_positions && _positions.length === 0) {\n    _positions = undefined;\n  }\n\n  var _locations;\n\n  if (positions && source) {\n    _locations = positions.map(function (pos) {\n      return getLocation(source, pos);\n    });\n  } else if (_nodes) {\n    _locations = _nodes.reduce(function (list, node) {\n      if (node.loc) {\n        list.push(getLocation(node.loc.source, node.loc.start));\n      }\n\n      return list;\n    }, []);\n  }\n\n  var _extensions = extensions;\n\n  if (_extensions == null && originalError != null) {\n    var originalExtensions = originalError.extensions;\n\n    if (isObjectLike(originalExtensions)) {\n      _extensions = originalExtensions;\n    }\n  }\n\n  Object.defineProperties(this, {\n    message: {\n      value: message,\n      // By being enumerable, JSON.stringify will include `message` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: true,\n      writable: true\n    },\n    locations: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _locations || undefined,\n      // By being enumerable, JSON.stringify will include `locations` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_locations)\n    },\n    path: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: path || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(path)\n    },\n    nodes: {\n      value: _nodes || undefined\n    },\n    source: {\n      value: _source || undefined\n    },\n    positions: {\n      value: _positions || undefined\n    },\n    originalError: {\n      value: originalError\n    },\n    extensions: {\n      // Coercing falsey values to undefined ensures they will not be included\n      // in JSON.stringify() when not provided.\n      value: _extensions || undefined,\n      // By being enumerable, JSON.stringify will include `path` in the\n      // resulting output. This ensures that the simplest possible GraphQL\n      // service adheres to the spec.\n      enumerable: Boolean(_extensions)\n    }\n  }); // Include (non-enumerable) stack trace.\n\n  if (originalError && originalError.stack) {\n    Object.defineProperty(this, 'stack', {\n      value: originalError.stack,\n      writable: true,\n      configurable: true\n    });\n  } else if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, GraphQLError);\n  } else {\n    Object.defineProperty(this, 'stack', {\n      value: Error().stack,\n      writable: true,\n      configurable: true\n    });\n  }\n}\nGraphQLError.prototype = Object.create(Error.prototype, {\n  constructor: {\n    value: GraphQLError\n  },\n  name: {\n    value: 'GraphQLError'\n  },\n  toString: {\n    value: function toString() {\n      return printError(this);\n    }\n  }\n});\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n","import { GraphQLError } from './GraphQLError';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","import defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { dedentBlockStringValue } from './blockString';\nimport { TokenKind } from './tokenKind';\n/**\n * Given a Source object, this returns a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport function createLexer(source, options) {\n  var startOfFileToken = new Tok(TokenKind.SOF, 0, 0, 0, 0, null);\n  var lexer = {\n    source: source,\n    options: options,\n    lastToken: startOfFileToken,\n    token: startOfFileToken,\n    line: 1,\n    lineStart: 0,\n    advance: advanceLexer,\n    lookahead: lookahead\n  };\n  return lexer;\n}\n\nfunction advanceLexer() {\n  this.lastToken = this.token;\n  var token = this.token = this.lookahead();\n  return token;\n}\n\nfunction lookahead() {\n  var token = this.token;\n\n  if (token.kind !== TokenKind.EOF) {\n    do {\n      // Note: next is only mutable during parsing, so we cast to allow this.\n      token = token.next || (token.next = readToken(this, token));\n    } while (token.kind === TokenKind.COMMENT);\n  }\n\n  return token;\n}\n/**\n * The return type of createLexer.\n */\n\n\n// @internal\nexport function isPunctuatorToken(token) {\n  var kind = token.kind;\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n/**\n * Helper function for constructing the Token object.\n */\n\nfunction Tok(kind, start, end, line, column, prev, value) {\n  this.kind = kind;\n  this.start = start;\n  this.end = end;\n  this.line = line;\n  this.column = column;\n  this.value = value;\n  this.prev = prev;\n  this.next = null;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Tok, function () {\n  return {\n    kind: this.kind,\n    value: this.value,\n    line: this.line,\n    column: this.column\n  };\n});\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = positionAfterWhitespace(body, prev.end, lexer);\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n\n  if (pos >= bodyLength) {\n    return new Tok(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n  }\n\n  var code = body.charCodeAt(pos); // SourceCharacter\n\n  switch (code) {\n    // !\n    case 33:\n      return new Tok(TokenKind.BANG, pos, pos + 1, line, col, prev);\n    // #\n\n    case 35:\n      return readComment(source, pos, line, col, prev);\n    // $\n\n    case 36:\n      return new Tok(TokenKind.DOLLAR, pos, pos + 1, line, col, prev);\n    // &\n\n    case 38:\n      return new Tok(TokenKind.AMP, pos, pos + 1, line, col, prev);\n    // (\n\n    case 40:\n      return new Tok(TokenKind.PAREN_L, pos, pos + 1, line, col, prev);\n    // )\n\n    case 41:\n      return new Tok(TokenKind.PAREN_R, pos, pos + 1, line, col, prev);\n    // .\n\n    case 46:\n      if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n        return new Tok(TokenKind.SPREAD, pos, pos + 3, line, col, prev);\n      }\n\n      break;\n    // :\n\n    case 58:\n      return new Tok(TokenKind.COLON, pos, pos + 1, line, col, prev);\n    // =\n\n    case 61:\n      return new Tok(TokenKind.EQUALS, pos, pos + 1, line, col, prev);\n    // @\n\n    case 64:\n      return new Tok(TokenKind.AT, pos, pos + 1, line, col, prev);\n    // [\n\n    case 91:\n      return new Tok(TokenKind.BRACKET_L, pos, pos + 1, line, col, prev);\n    // ]\n\n    case 93:\n      return new Tok(TokenKind.BRACKET_R, pos, pos + 1, line, col, prev);\n    // {\n\n    case 123:\n      return new Tok(TokenKind.BRACE_L, pos, pos + 1, line, col, prev);\n    // |\n\n    case 124:\n      return new Tok(TokenKind.PIPE, pos, pos + 1, line, col, prev);\n    // }\n\n    case 125:\n      return new Tok(TokenKind.BRACE_R, pos, pos + 1, line, col, prev);\n    // A-Z _ a-z\n\n    case 65:\n    case 66:\n    case 67:\n    case 68:\n    case 69:\n    case 70:\n    case 71:\n    case 72:\n    case 73:\n    case 74:\n    case 75:\n    case 76:\n    case 77:\n    case 78:\n    case 79:\n    case 80:\n    case 81:\n    case 82:\n    case 83:\n    case 84:\n    case 85:\n    case 86:\n    case 87:\n    case 88:\n    case 89:\n    case 90:\n    case 95:\n    case 97:\n    case 98:\n    case 99:\n    case 100:\n    case 101:\n    case 102:\n    case 103:\n    case 104:\n    case 105:\n    case 106:\n    case 107:\n    case 108:\n    case 109:\n    case 110:\n    case 111:\n    case 112:\n    case 113:\n    case 114:\n    case 115:\n    case 116:\n    case 117:\n    case 118:\n    case 119:\n    case 120:\n    case 121:\n    case 122:\n      return readName(source, pos, line, col, prev);\n    // - 0-9\n\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return readNumber(source, pos, code, line, col, prev);\n    // \"\n\n    case 34:\n      if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n        return readBlockString(source, pos, line, col, prev, lexer);\n      }\n\n      return readString(source, pos, line, col, prev);\n  }\n\n  throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads from body starting at startPosition until it finds a non-whitespace\n * character, then returns the position of that character for lexing.\n */\n\n\nfunction positionAfterWhitespace(body, startPosition, lexer) {\n  var bodyLength = body.length;\n  var position = startPosition;\n\n  while (position < bodyLength) {\n    var code = body.charCodeAt(position); // tab | space | comma | BOM\n\n    if (code === 9 || code === 32 || code === 44 || code === 0xfeff) {\n      ++position;\n    } else if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else {\n      break;\n    }\n  }\n\n  return position;\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Tok(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or e\n\n\n  if (code === 46 || code === 69 || code === 101) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Tok(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Tok(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Tok(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Tok(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n}\n","import inspect from '../jsutils/inspect';\nimport devAssert from '../jsutils/devAssert';\nimport defineToJSON from '../jsutils/defineToJSON';\nimport { syntaxError } from '../error/syntaxError';\nimport { Kind } from './kinds';\nimport { Source } from './source';\nimport { createLexer } from './lexer';\nimport { DirectiveLocation } from './directiveLocation';\nimport { TokenKind } from './tokenKind';\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n\nvar Parser =\n/*#__PURE__*/\nfunction () {\n  function Parser(source, options) {\n    var sourceObj = typeof source === 'string' ? new Source(source) : source;\n    sourceObj instanceof Source || devAssert(0, \"Must provide Source. Received: \".concat(inspect(sourceObj)));\n    this._lexer = createLexer(sourceObj);\n    this._options = options || {};\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (this._options.experimentalFragmentVariables) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        if (token.value === 'true' || token.value === 'false') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.BOOLEAN,\n            value: token.value === 'true',\n            loc: this.loc(token)\n          };\n        } else if (token.value === 'null') {\n          this._lexer.advance();\n\n          return {\n            kind: Kind.NULL,\n            loc: this.loc(token)\n          };\n        }\n\n        this._lexer.advance();\n\n        return {\n          kind: Kind.ENUM,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var types = [];\n\n    if (this.expectOptionalKeyword('implements')) {\n      // Optional leading ampersand\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || // Legacy support for the SDL?\n      this._options.allowLegacySDLImplementsInterfaces && this.peek(TokenKind.NAME));\n    }\n\n    return types;\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    // Legacy support for the SDL?\n    if (this._options.allowLegacySDLEmptyFields && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    var types = [];\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      // Optional leading pipe\n      this.expectOptionalToken(TokenKind.PIPE);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.PIPE));\n    }\n\n    return types;\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *   - extend interface Name Directives[Const]? FieldsDefinition\n   *   - extend interface Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    // Optional leading pipe\n    this.expectOptionalToken(TokenKind.PIPE);\n    var locations = [];\n\n    do {\n      locations.push(this.parseDirectiveLocation());\n    } while (this.expectOptionalToken(TokenKind.PIPE));\n\n    return locations;\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in\n   * the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    if (!this._options.noLocation) {\n      return new Loc(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(kind, \", found \").concat(getTokenDesc(token)));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing\n   * the lexer. Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token)));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing\n   * the lexer. Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token\n   * is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken || this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token)));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always\n   * return non-empty list that begins with a lex token of openKind and ends\n   * with a lex token of closeKind. Advances the parser to the next lex token\n   * after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by\n   * the parseFn. This list begins with a lex token of openKind\n   * and ends with a lex token of closeKind. Advances the parser\n   * to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n\nfunction Loc(startToken, endToken, source) {\n  this.start = startToken.start;\n  this.end = endToken.end;\n  this.startToken = startToken;\n  this.endToken = endToken;\n  this.source = source;\n} // Print a simplified form when appearing in JSON/util.inspect.\n\n\ndefineToJSON(Loc, function () {\n  return {\n    start: this.start,\n    end: this.end\n  };\n});\n/**\n * A helper function to describe a token as a string for debugging\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return value ? \"\".concat(token.kind, \" \\\"\").concat(value, \"\\\"\") : token.kind;\n}\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n","/**\n * The `defineToStringTag()` function checks first to see if the runtime\n * supports the `Symbol` class and then if the `Symbol.toStringTag` constant\n * is defined as a `Symbol` instance. If both conditions are met, the\n * Symbol.toStringTag property is defined as a getter that returns the\n * supplied class constructor's name.\n *\n * @method defineToStringTag\n *\n * @param {Class<any>} classObject a class such as Object, String, Number but\n * typically one of your own creation through the class keyword; `class A {}`,\n * for example.\n */\nexport default function defineToStringTag(classObject) {\n  if (typeof Symbol === 'function' && Symbol.toStringTag) {\n    Object.defineProperty(classObject.prototype, Symbol.toStringTag, {\n      get: function get() {\n        return this.constructor.name;\n      }\n    });\n  }\n}\n","import devAssert from '../jsutils/devAssert';\nimport defineToStringTag from '../jsutils/defineToStringTag';\n\n/**\n * A representation of source input to GraphQL.\n * `name` and `locationOffset` are optional. They are useful for clients who\n * store GraphQL documents in source files; for example, if the GraphQL input\n * starts at line 40 in a file named Foo.graphql, it might be useful for name to\n * be \"Foo.graphql\" and location to be `{ line: 40, column: 0 }`.\n * line and column in locationOffset are 1-indexed\n */\nexport var Source = function Source(body, name, locationOffset) {\n  this.body = body;\n  this.name = name || 'GraphQL request';\n  this.locationOffset = locationOffset || {\n    line: 1,\n    column: 1\n  };\n  this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive');\n  this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive');\n}; // Conditionally apply `[Symbol.toStringTag]` if `Symbol`s are supported\n\ndefineToStringTag(Source);\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\"};","import { parser, operationName, DocumentType, getApolloContext } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign } from 'tslib';\nimport React, { useRef, useContext, useReducer, useEffect, useState } from 'react';\nimport { NetworkStatus, ApolloError } from 'apollo-client';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        process.env.NODE_ENV === \"production\" ? invariant(!!client, 2) : invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        process.env.NODE_ENV === \"production\" ? invariant(operation.type === type, 3) : invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\n\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, forceUpdate = _a.forceUpdate;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.forceUpdate();\n        };\n        _this.getExecuteResult = function () {\n            var result = _this.getQueryResult();\n            _this.startQuerySubscription();\n            return result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.forceUpdate = forceUpdate;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined\n                }\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        var obs = this.currentObservable.query;\n        var currentResult = obs.getCurrentResult();\n        return currentResult.loading ? obs.result() : false;\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _this = this;\n        var _b = (_a === void 0 ? {} : _a).lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted();\n            setTimeout(function () {\n                _this.currentObservable.query &&\n                    _this.currentObservable.query.resetQueryStoreErrors();\n            });\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign({}, options.variables, this.lazyOptions.variables);\n            options.context = __assign({}, options.context, this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var treeRenderingInitiated = this.context && this.context.renderPromises;\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = {\n            loading: true,\n            networkStatus: NetworkStatus.loading,\n            called: true,\n            data: undefined\n        };\n        if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n            return ssrLoading;\n        }\n        var result;\n        if (treeRenderingInitiated) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getExecuteResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.context &&\n            this.context.renderPromises &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign({}, options, { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        if (this.context && this.context.renderPromises) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign({}, observableQueryOptions, { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.context && this.context.renderPromises) {\n                this.context.renderPromises.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign({}, this.prepareObservableQueryOptions(), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function () {\n        var _this = this;\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                _this.forceUpdate();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    _this.forceUpdate();\n                }\n            }\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult\n        });\n    };\n    QueryData.prototype.getQueryResult = function () {\n        var result = this.observableQueryFields();\n        var options = this.getOptions();\n        if (options.skip) {\n            result = __assign({}, result, { data: undefined, error: undefined, loading: false, called: true });\n        }\n        else {\n            var currentResult = this.currentObservable.query.getCurrentResult();\n            var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n            var error = currentResult.error, data = currentResult.data;\n            if (errors && errors.length > 0) {\n                error = new ApolloError({ graphQLErrors: errors });\n            }\n            result = __assign({}, result, { loading: loading,\n                networkStatus: networkStatus,\n                error: error, called: true });\n            if (loading) {\n                var previousData = this.previousData.result && this.previousData.result.data;\n                result.data =\n                    previousData && data\n                        ? __assign({}, previousData, data) : previousData || data;\n            }\n            else if (error) {\n                Object.assign(result, {\n                    data: (this.currentObservable.query.getLastResult() || {})\n                        .data\n                });\n            }\n            else {\n                var fetchPolicy = this.currentObservable.query.options.fetchPolicy;\n                var partialRefetch = options.partialRefetch;\n                if (partialRefetch &&\n                    !data &&\n                    partial &&\n                    fetchPolicy !== 'cache-only') {\n                    Object.assign(result, {\n                        loading: true,\n                        networkStatus: NetworkStatus.loading\n                    });\n                    result.refetch();\n                    return result;\n                }\n                result.data = data;\n            }\n        }\n        result.client = this.client;\n        this.previousData.loading =\n            (this.previousData.result && this.previousData.result.loading) || false;\n        this.previousData.result = result;\n        return result;\n    };\n    QueryData.prototype.handleErrorOrCompleted = function () {\n        var obsQuery = this.currentObservable.query;\n        if (!obsQuery)\n            return;\n        var _a = obsQuery.getCurrentResult(), data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore\n        };\n    };\n    return QueryData;\n}(OperationData));\n\nfunction useDeepMemo(memoFn, key) {\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n\nfunction useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign({}, options, { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    if (!queryDataRef.current) {\n        queryDataRef.current = new QueryData({\n            options: updatedOptions,\n            context: context,\n            forceUpdate: forceUpdate\n        });\n    }\n    var queryData = queryDataRef.current;\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    var memo = {\n        options: __assign({}, updatedOptions, { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () { return queryData.afterExecute({ lazy: lazy }); }, lazy\n        ? undefined\n        : [\n            queryResult.loading,\n            queryResult.networkStatus,\n            queryResult.error,\n            queryResult.data\n        ]);\n    useEffect(function () {\n        return function () { return queryData.cleanup(); };\n    }, []);\n    return result;\n}\n\nfunction useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n\nfunction useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        result.client = this.refreshClient().client;\n        return [this.runMutation, result];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\n\nfunction useMutation(mutation, options) {\n    var context = useContext(getApolloContext());\n    var _a = useState({ called: false, loading: false }), result = _a[0], setResult = _a[1];\n    var updatedOptions = options ? __assign({}, options, { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n\nvar SubscriptionData = (function (_super) {\n    __extends(SubscriptionData, _super);\n    function SubscriptionData(_a) {\n        var options = _a.options, context = _a.context, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.currentObservable = {};\n        _this.setResult = setResult;\n        _this.initialize(options);\n        return _this;\n    }\n    SubscriptionData.prototype.execute = function (result) {\n        if (this.getOptions().skip === true) {\n            this.cleanup();\n            return {\n                loading: false,\n                error: undefined,\n                data: undefined,\n                variables: this.getOptions().variables\n            };\n        }\n        var currentResult = result;\n        if (this.refreshClient().isNew) {\n            currentResult = this.getLoadingResult();\n        }\n        var shouldResubscribe = this.getOptions().shouldResubscribe;\n        if (typeof shouldResubscribe === 'function') {\n            shouldResubscribe = !!shouldResubscribe(this.getOptions());\n        }\n        if (shouldResubscribe !== false &&\n            this.previousOptions &&\n            Object.keys(this.previousOptions).length > 0 &&\n            (this.previousOptions.subscription !== this.getOptions().subscription ||\n                !equal(this.previousOptions.variables, this.getOptions().variables) ||\n                this.previousOptions.skip !== this.getOptions().skip)) {\n            this.cleanup();\n            currentResult = this.getLoadingResult();\n        }\n        this.initialize(this.getOptions());\n        this.startSubscription();\n        this.previousOptions = this.getOptions();\n        return __assign({}, currentResult, { variables: this.getOptions().variables });\n    };\n    SubscriptionData.prototype.afterExecute = function () {\n        this.isMounted = true;\n    };\n    SubscriptionData.prototype.cleanup = function () {\n        this.endSubscription();\n        delete this.currentObservable.query;\n    };\n    SubscriptionData.prototype.initialize = function (options) {\n        if (this.currentObservable.query || this.getOptions().skip === true)\n            return;\n        this.currentObservable.query = this.refreshClient().client.subscribe({\n            query: options.subscription,\n            variables: options.variables,\n            fetchPolicy: options.fetchPolicy\n        });\n    };\n    SubscriptionData.prototype.startSubscription = function () {\n        if (this.currentObservable.subscription)\n            return;\n        this.currentObservable.subscription = this.currentObservable.query.subscribe({\n            next: this.updateCurrentData.bind(this),\n            error: this.updateError.bind(this),\n            complete: this.completeSubscription.bind(this)\n        });\n    };\n    SubscriptionData.prototype.getLoadingResult = function () {\n        return {\n            loading: true,\n            error: undefined,\n            data: undefined\n        };\n    };\n    SubscriptionData.prototype.updateResult = function (result) {\n        if (this.isMounted) {\n            this.setResult(result);\n        }\n    };\n    SubscriptionData.prototype.updateCurrentData = function (result) {\n        var onSubscriptionData = this.getOptions().onSubscriptionData;\n        this.updateResult({\n            data: result.data,\n            loading: false,\n            error: undefined\n        });\n        if (onSubscriptionData) {\n            onSubscriptionData({\n                client: this.refreshClient().client,\n                subscriptionData: result\n            });\n        }\n    };\n    SubscriptionData.prototype.updateError = function (error) {\n        this.updateResult({\n            error: error,\n            loading: false\n        });\n    };\n    SubscriptionData.prototype.completeSubscription = function () {\n        var onSubscriptionComplete = this.getOptions().onSubscriptionComplete;\n        if (onSubscriptionComplete)\n            onSubscriptionComplete();\n        this.endSubscription();\n    };\n    SubscriptionData.prototype.endSubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    return SubscriptionData;\n}(OperationData));\n\nfunction useSubscription(subscription, options) {\n    var context = useContext(getApolloContext());\n    var updatedOptions = options\n        ? __assign({}, options, { subscription: subscription }) : { subscription: subscription };\n    var _a = useState({\n        loading: !updatedOptions.skip,\n        error: undefined,\n        data: undefined\n    }), result = _a[0], setResult = _a[1];\n    var subscriptionDataRef = useRef();\n    function getSubscriptionDataRef() {\n        if (!subscriptionDataRef.current) {\n            subscriptionDataRef.current = new SubscriptionData({\n                options: updatedOptions,\n                context: context,\n                setResult: setResult\n            });\n        }\n        return subscriptionDataRef.current;\n    }\n    var subscriptionData = getSubscriptionDataRef();\n    subscriptionData.setOptions(updatedOptions, true);\n    subscriptionData.context = context;\n    useEffect(function () { return subscriptionData.afterExecute(); });\n    useEffect(function () { return subscriptionData.cleanup.bind(subscriptionData); }, []);\n    return subscriptionData.execute(result);\n}\n\nfunction useApolloClient() {\n    var client = React.useContext(getApolloContext()).client;\n    process.env.NODE_ENV === \"production\" ? invariant(client, 1) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n\nfunction makeDefaultQueryInfo() {\n    return {\n        seen: false,\n        observable: null\n    };\n}\nvar RenderPromises = (function () {\n    function RenderPromises() {\n        this.queryPromises = new Map();\n        this.queryInfoTrie = new Map();\n    }\n    RenderPromises.prototype.registerSSRObservable = function (observable, props) {\n        this.lookupQueryInfo(props).observable = observable;\n    };\n    RenderPromises.prototype.getSSRObservable = function (props) {\n        return this.lookupQueryInfo(props).observable;\n    };\n    RenderPromises.prototype.addQueryPromise = function (queryInstance, finish) {\n        var info = this.lookupQueryInfo(queryInstance.getOptions());\n        if (!info.seen) {\n            this.queryPromises.set(queryInstance.getOptions(), new Promise(function (resolve) {\n                resolve(queryInstance.fetchData());\n            }));\n            return null;\n        }\n        return finish();\n    };\n    RenderPromises.prototype.hasPromises = function () {\n        return this.queryPromises.size > 0;\n    };\n    RenderPromises.prototype.consumeAndAwaitPromises = function () {\n        var _this = this;\n        var promises = [];\n        this.queryPromises.forEach(function (promise, queryInstance) {\n            _this.lookupQueryInfo(queryInstance).seen = true;\n            promises.push(promise);\n        });\n        this.queryPromises.clear();\n        return Promise.all(promises);\n    };\n    RenderPromises.prototype.lookupQueryInfo = function (props) {\n        var queryInfoTrie = this.queryInfoTrie;\n        var query = props.query, variables = props.variables;\n        var varMap = queryInfoTrie.get(query) || new Map();\n        if (!queryInfoTrie.has(query))\n            queryInfoTrie.set(query, varMap);\n        var variablesString = JSON.stringify(variables);\n        var info = varMap.get(variablesString) || makeDefaultQueryInfo();\n        if (!varMap.has(variablesString))\n            varMap.set(variablesString, info);\n        return info;\n    };\n    return RenderPromises;\n}());\n\nexport { RenderPromises, useApolloClient, useLazyQuery, useMutation, useQuery, useSubscription };\n//# sourceMappingURL=react-hooks.esm.js.map\n","var parser = require('graphql/language/parser');\n\nvar parse = parser.parse;\n\n// Strip insignificant whitespace\n// Note that this could do a lot more, such as reorder fields etc.\nfunction normalize(string) {\n  return string.replace(/[\\s,]+/g, ' ').trim();\n}\n\n// A map docString -> graphql document\nvar docCache = {};\n\n// A map fragmentName -> [normalized source]\nvar fragmentSourceMap = {};\n\nfunction cacheKeyFromLoc(loc) {\n  return normalize(loc.source.body.substring(loc.start, loc.end));\n}\n\n// For testing.\nfunction resetCaches() {\n  docCache = {};\n  fragmentSourceMap = {};\n}\n\n// Take a unstripped parsed document (query/mutation or even fragment), and\n// check all fragment definitions, checking for name->source uniqueness.\n// We also want to make sure only unique fragments exist in the document.\nvar printFragmentWarnings = true;\nfunction processFragments(ast) {\n  var astFragmentMap = {};\n  var definitions = [];\n\n  for (var i = 0; i < ast.definitions.length; i++) {\n    var fragmentDefinition = ast.definitions[i];\n\n    if (fragmentDefinition.kind === 'FragmentDefinition') {\n      var fragmentName = fragmentDefinition.name.value;\n      var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n\n      // We know something about this fragment\n      if (fragmentSourceMap.hasOwnProperty(fragmentName) && !fragmentSourceMap[fragmentName][sourceKey]) {\n\n        // this is a problem because the app developer is trying to register another fragment with\n        // the same name as one previously registered. So, we tell them about it.\n        if (printFragmentWarnings) {\n          console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n            + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n            + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n        }\n\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n\n      } else if (!fragmentSourceMap.hasOwnProperty(fragmentName)) {\n        fragmentSourceMap[fragmentName] = {};\n        fragmentSourceMap[fragmentName][sourceKey] = true;\n      }\n\n      if (!astFragmentMap[sourceKey]) {\n        astFragmentMap[sourceKey] = true;\n        definitions.push(fragmentDefinition);\n      }\n    } else {\n      definitions.push(fragmentDefinition);\n    }\n  }\n\n  ast.definitions = definitions;\n  return ast;\n}\n\nfunction disableFragmentWarnings() {\n  printFragmentWarnings = false;\n}\n\nfunction stripLoc(doc, removeLocAtThisLevel) {\n  var docType = Object.prototype.toString.call(doc);\n\n  if (docType === '[object Array]') {\n    return doc.map(function (d) {\n      return stripLoc(d, removeLocAtThisLevel);\n    });\n  }\n\n  if (docType !== '[object Object]') {\n    throw new Error('Unexpected input.');\n  }\n\n  // We don't want to remove the root loc field so we can use it\n  // for fragment substitution (see below)\n  if (removeLocAtThisLevel && doc.loc) {\n    delete doc.loc;\n  }\n\n  // https://github.com/apollographql/graphql-tag/issues/40\n  if (doc.loc) {\n    delete doc.loc.startToken;\n    delete doc.loc.endToken;\n  }\n\n  var keys = Object.keys(doc);\n  var key;\n  var value;\n  var valueType;\n\n  for (key in keys) {\n    if (keys.hasOwnProperty(key)) {\n      value = doc[keys[key]];\n      valueType = Object.prototype.toString.call(value);\n\n      if (valueType === '[object Object]' || valueType === '[object Array]') {\n        doc[keys[key]] = stripLoc(value, true);\n      }\n    }\n  }\n\n  return doc;\n}\n\nvar experimentalFragmentVariables = false;\nfunction parseDocument(doc) {\n  var cacheKey = normalize(doc);\n\n  if (docCache[cacheKey]) {\n    return docCache[cacheKey];\n  }\n\n  var parsed = parse(doc, { experimentalFragmentVariables: experimentalFragmentVariables });\n  if (!parsed || parsed.kind !== 'Document') {\n    throw new Error('Not a valid GraphQL document.');\n  }\n\n  // check that all \"new\" fragments inside the documents are consistent with\n  // existing fragments of the same name\n  parsed = processFragments(parsed);\n  parsed = stripLoc(parsed, false);\n  docCache[cacheKey] = parsed;\n\n  return parsed;\n}\n\nfunction enableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = true;\n}\n\nfunction disableExperimentalFragmentVariables() {\n  experimentalFragmentVariables = false;\n}\n\n// XXX This should eventually disallow arbitrary string interpolation, like Relay does\nfunction gql(/* arguments */) {\n  var args = Array.prototype.slice.call(arguments);\n\n  var literals = args[0];\n\n  // We always get literals[0] and then matching post literals for each arg given\n  var result = (typeof(literals) === \"string\") ? literals : literals[0];\n\n  for (var i = 1; i < args.length; i++) {\n    if (args[i] && args[i].kind && args[i].kind === 'Document') {\n      result += args[i].loc.source.body;\n    } else {\n      result += args[i];\n    }\n\n    result += literals[i];\n  }\n\n  return parseDocument(result);\n}\n\n// Support typescript, which isn't as nice as Babel about default exports\ngql.default = gql;\ngql.resetCaches = resetCaches;\ngql.disableFragmentWarnings = disableFragmentWarnings;\ngql.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;\ngql.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;\n\nmodule.exports = gql;\n"],"sourceRoot":""}